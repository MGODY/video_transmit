#############################################################################
# Makefile for building: camera
# Generated by qmake (2.01a) (Qt 4.8.6) on: ?? 7? 4 13:30:51 2016
# Project:  camera.pro
# Template: app
# Command: /usr/lib/x86_64-linux-gnu/qt4/bin/qmake -o Makefile camera.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -m64 -pipe -O2 -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++-64 -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I. -IQt -ICamera_device -IH264 -ITransfer -Iinclude -I.
LINK          = g++
LFLAGS        = -m64 -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib/x86_64-linux-gnu lib/libx264.a -ldl lib/libjrtp.a lib/libjthread.a -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/lib/x86_64-linux-gnu/qt4/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = main.cpp \
		Camera_device/videodevice.cpp \
		H264/h264.cpp \
		Qt/processImage.cpp \
		Transfer/transfer.cpp moc_videodevice.cpp \
		moc_h264.cpp \
		moc_processImage.cpp \
		moc_transfer.cpp
OBJECTS       = main.o \
		videodevice.o \
		h264.o \
		processImage.o \
		transfer.o \
		moc_videodevice.o \
		moc_h264.o \
		moc_processImage.o \
		moc_transfer.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		camera.pro
QMAKE_TARGET  = camera
DESTDIR       = 
TARGET        = camera

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: camera.pro  /usr/share/qt4/mkspecs/linux-g++-64/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/x86_64-linux-gnu/libQtGui.prl \
		/usr/lib/x86_64-linux-gnu/libQtCore.prl
	$(QMAKE) -o Makefile camera.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/x86_64-linux-gnu/libQtGui.prl:
/usr/lib/x86_64-linux-gnu/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile camera.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/camera1.0.0 || $(MKDIR) .tmp/camera1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/camera1.0.0/ && $(COPY_FILE) --parents def.h Camera_device/videodevice.h H264/h264.h Qt/processImage.h Transfer/transfer.h H264/nal_struct.h .tmp/camera1.0.0/ && $(COPY_FILE) --parents main.cpp Camera_device/videodevice.cpp H264/h264.cpp Qt/processImage.cpp Transfer/transfer.cpp .tmp/camera1.0.0/ && (cd `dirname .tmp/camera1.0.0` && $(TAR) camera1.0.0.tar camera1.0.0 && $(COMPRESS) camera1.0.0.tar) && $(MOVE) `dirname .tmp/camera1.0.0`/camera1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/camera1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_videodevice.cpp moc_h264.cpp moc_processImage.cpp moc_transfer.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_videodevice.cpp moc_h264.cpp moc_processImage.cpp moc_transfer.cpp
moc_videodevice.cpp: def.h \
		Camera_device/videodevice.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Camera_device/videodevice.h -o moc_videodevice.cpp

moc_h264.cpp: def.h \
		Qt/processImage.h \
		Camera_device/videodevice.h \
		H264/h264.h \
		H264/nal_struct.h \
		Transfer/transfer.h \
		H264/h264.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) H264/h264.h -o moc_h264.cpp

moc_processImage.cpp: def.h \
		Camera_device/videodevice.h \
		H264/h264.h \
		Qt/processImage.h \
		Transfer/transfer.h \
		H264/nal_struct.h \
		Qt/processImage.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Qt/processImage.h -o moc_processImage.cpp

moc_transfer.cpp: def.h \
		H264/h264.h \
		Qt/processImage.h \
		Camera_device/videodevice.h \
		Transfer/transfer.h \
		H264/nal_struct.h \
		Transfer/transfer.h
	/usr/lib/x86_64-linux-gnu/qt4/bin/moc $(DEFINES) $(INCPATH) Transfer/transfer.h -o moc_transfer.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

main.o: main.cpp Qt/processImage.h \
		def.h \
		Camera_device/videodevice.h \
		H264/h264.h \
		H264/nal_struct.h \
		Transfer/transfer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

videodevice.o: Camera_device/videodevice.cpp Camera_device/videodevice.h \
		def.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o videodevice.o Camera_device/videodevice.cpp

h264.o: H264/h264.cpp H264/h264.h \
		def.h \
		Qt/processImage.h \
		Camera_device/videodevice.h \
		Transfer/transfer.h \
		H264/nal_struct.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o h264.o H264/h264.cpp

processImage.o: Qt/processImage.cpp Qt/processImage.h \
		def.h \
		Camera_device/videodevice.h \
		H264/h264.h \
		H264/nal_struct.h \
		Transfer/transfer.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o processImage.o Qt/processImage.cpp

transfer.o: Transfer/transfer.cpp Transfer/transfer.h \
		def.h \
		H264/h264.h \
		Qt/processImage.h \
		Camera_device/videodevice.h \
		H264/nal_struct.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o transfer.o Transfer/transfer.cpp

moc_videodevice.o: moc_videodevice.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_videodevice.o moc_videodevice.cpp

moc_h264.o: moc_h264.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_h264.o moc_h264.cpp

moc_processImage.o: moc_processImage.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_processImage.o moc_processImage.cpp

moc_transfer.o: moc_transfer.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_transfer.o moc_transfer.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

